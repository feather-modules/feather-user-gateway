openapi: 3.1.0
info:
  title: UserGateway - Accounts - API
  description: 'The complete Accounts API definition used by the UserGateway.

    (Generated on: 2024. Sep 19. at 8:43:40)'
  contact:
    name: Binary Birds
    url: https://binarybirds.com
    email: info@binarybirds.com
  version: 1.0.0
tags:
- name: Oauth
  description: ''
- name: Oauth - Client
  description: ''
- name: Oauth - Role
  description: ''
- name: UserGateway - Accounts
  description: ''
paths:
  /authorization:
    get:
      tags:
      - Oauth
      summary: start authorize
      description: start authorize
      operationId: authorizeGetOauthAuth
      parameters:
      - $ref: '#/components/parameters/OauthAuthClientId'
      - $ref: '#/components/parameters/OauthAuthRedirectUri'
      - $ref: '#/components/parameters/OauthAuthScope'
      - $ref: '#/components/parameters/OauthAuthState'
      - $ref: '#/components/parameters/OauthAuthResponseType'
      - $ref: '#/components/parameters/OauthAuthReturnRedirectUri'
      responses:
        200:
          $ref: '#/components/responses/OauthAuthRedirect200Response'
        302:
          $ref: '#/components/responses/OauthAuthRedirectResponse'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security: []
    post:
      tags:
      - Oauth
      summary: get authorize code
      description: get authorize code and return it with redirect
      operationId: authorizePostOauthAuth
      parameters:
      - $ref: '#/components/parameters/OauthAuthReturnRedirectUri'
      requestBody:
        description: get authorization code request body
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OauthAuthAuthorizePostRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/OauthAuthRedirect200Response'
        302:
          $ref: '#/components/responses/OauthAuthRedirectResponse'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        409:
          $ref: '#/components/responses/FeatherCoreConflict'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security: []
  /authorization/client:
    get:
      tags:
      - Oauth - Client
      summary: List Oauth Clients
      description: List available Oauth Clients
      operationId: listOauthClient
      parameters:
      - $ref: '#/components/parameters/OauthClientListSort'
      - $ref: '#/components/parameters/FeatherCoreListSearch'
      - $ref: '#/components/parameters/FeatherCoreListPageSize'
      - $ref: '#/components/parameters/FeatherCoreListPageIndex'
      - $ref: '#/components/parameters/FeatherCoreListOrder'
      responses:
        200:
          $ref: '#/components/responses/OauthClientList'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security:
      - FeatherCoreBearerToken: []
    post:
      tags:
      - Oauth - Client
      summary: Create an Oauth Client
      description: "    Creates a new Oauth Client.\n    For the \"app\" type the
        ClientSecret is not generated and saved.\n    For the \"server\" type \"redirectUri\"
        and \"loginRedirectUri\" are not needed and not saved if added."
      operationId: createOauthClient
      requestBody:
        description: Create request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthClientCreate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/OauthClientDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /authorization/client/{clientId}:
    parameters:
    - $ref: '#/components/parameters/OauthClientClientId'
    get:
      tags:
      - Oauth - Client
      summary: Oauth Client details
      description: Get the details of an oauth client
      operationId: detailOauthClient
      responses:
        200:
          $ref: '#/components/responses/OauthClientDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
      security:
      - FeatherCoreBearerToken: []
    put:
      tags:
      - Oauth - Client
      summary: Update an Oauth Client
      description: Updates an Oauth Client
      operationId: updateOauthClient
      requestBody:
        description: Update request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthClientUpdate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/OauthClientDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    delete:
      tags:
      - Oauth - Client
      summary: Delete one Oauth Client
      description: Delete one Oauth Client using identifier
      operationId: deleteOauthClient
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    patch:
      tags:
      - Oauth - Client
      summary: Patch an Oauth Client
      description: Patch a given Oauth Client
      operationId: patchOauthClient
      requestBody:
        description: Patch request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthClientPatch'
        required: true
      responses:
        200:
          $ref: '#/components/responses/OauthClientDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /authorization/roles:
    get:
      tags:
      - Oauth - Role
      summary: List Oauth Roles
      description: List available Oauth Roles
      operationId: listOauthRole
      parameters:
      - $ref: '#/components/parameters/OauthRoleListSort'
      - $ref: '#/components/parameters/FeatherCoreListSearch'
      - $ref: '#/components/parameters/FeatherCoreListPageSize'
      - $ref: '#/components/parameters/FeatherCoreListPageIndex'
      - $ref: '#/components/parameters/FeatherCoreListOrder'
      responses:
        200:
          $ref: '#/components/responses/OauthRoleList'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security:
      - FeatherCoreBearerToken: []
  /authorization/token:
    post:
      tags:
      - Oauth
      summary: returns a JWT
      description: exchange authorization code for JWT or get server JWT
      operationId: tokenReturnOauthAuth
      requestBody:
        description: exchange token request body
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OauthAuthTokenPostRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/OauthAuthTokenPostResponse'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        409:
          $ref: '#/components/responses/FeatherCoreConflict'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security: []
  /usergateway/accounts:
    get:
      tags:
      - UserGateway - Accounts
      summary: List User Accounts
      description: List available User Accounts
      operationId: listUserGatewayAccounts
      parameters:
      - $ref: '#/components/parameters/UserAccountListSort'
      - $ref: '#/components/parameters/FeatherCoreListSearch'
      - $ref: '#/components/parameters/FeatherCoreListPageSize'
      - $ref: '#/components/parameters/FeatherCoreListPageIndex'
      - $ref: '#/components/parameters/FeatherCoreListOrder'
      responses:
        200:
          $ref: '#/components/responses/UserAccountList'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security:
      - FeatherCoreBearerToken: []
  /usergateway/accounts/references:
    post:
      tags:
      - UserGateway - Accounts
      summary: Get user references
      description: Return the user references by user ids.
      operationId: referenceUserGatewayAccounts
      requestBody:
        description: User ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGatewayAccountsIdArray'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserGatewayAccountsReferenceArray'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /usergateway/accounts/{accountId}:
    parameters:
    - $ref: '#/components/parameters/UserAccountId'
    get:
      tags:
      - UserGateway - Accounts
      summary: User Account details
      description: Get the details of a User Account
      operationId: detailUserGatewayAccounts
      responses:
        200:
          $ref: '#/components/responses/UserAccountDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
      security:
      - FeatherCoreBearerToken: []
components:
  schemas:
    FeatherCoreBadRequestError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreBadRequestErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreBadRequestErrorKey:
      type: string
      enum:
      - missingRequestBody
      - invalidRequestBody
      description: You can use this key for translation purposes.
      examples:
      - missingRequestBody
      - invalidRequestBody
    FeatherCoreConflictError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreConflictErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreConflictErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreCreatedAt:
      type: string
      format: date-time
      description: Object creation date
      examples:
      - '2023-04-04T09:20:15.000Z'
    FeatherCoreErrorMessage:
      type: string
      description: The original error message provided by the system.
      examples:
      - Something went wrong with the request.
    FeatherCoreForbiddenError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreForbiddenErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreForbiddenErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreGoneError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreGoneErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreGoneErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreHeadersContentLength:
      type: integer
      description: Content length
    FeatherCoreInternalServerErrorError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreInternalServerErrorErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreInternalServerErrorErrorKey:
      type: string
      description: The key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreListCount:
      type: integer
      description: Total elements
      examples:
      - 42
    FeatherCoreListOrder:
      type: string
      enum:
      - asc
      - desc
      default: asc
      description: Order of the list (ascending or descending).
      examples:
      - asc
      - desc
    FeatherCoreListPage:
      type: object
      description: Page properties
      properties:
        size:
          $ref: '#/components/schemas/FeatherCoreListPageSize'
        index:
          $ref: '#/components/schemas/FeatherCoreListPageIndex'
      required:
      - size
      - index
    FeatherCoreListPageIndex:
      type: integer
      default: 0
      description: Page index
      examples:
      - 0
    FeatherCoreListPageSize:
      type: integer
      default: 50
      description: Page size
      examples:
      - 10
    FeatherCoreListSearch:
      type: string
      description: Value of the search term.
      examples:
      - foo
    FeatherCoreMethodNotAllowedError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreMethodNotAllowedErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreMethodNotAllowedErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreNotAcceptableError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreNotAcceptableErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreNotAcceptableErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreNotFoundError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreNotFoundErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreNotFoundErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreUnauthorizedError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnauthorizedErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnauthorizedErrorKey:
      type: string
      const: invalidUserToken
      description: You can use this key for translation purposes.
      examples:
      - invalidUserToken
    FeatherCoreUnprocessableContentError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
        failures:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailure'
      required:
      - key
      - message
      - failures
    FeatherCoreUnprocessableContentErrorFailure:
      type: array
      description: ''
      items:
        $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailureDetail'
      maxItems: 1000
      minItems: 0
    FeatherCoreUnprocessableContentErrorFailureDetail:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailureDetailKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnprocessableContentErrorFailureDetailKey:
      type: string
      description: Related field key for the error detail.
      examples:
      - email
      - password
      - coordinate
      - coordinate.latitude
      - coordinate.longitude
    FeatherCoreUnprocessableContentErrorKey:
      type: string
      const: validation
      description: You can use this key for translation purposes.
      examples:
      - validation
    FeatherCoreUnsupportedMediaTypeError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnsupportedMediaTypeErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnsupportedMediaTypeErrorKey:
      type: string
      description: You can use this key for translation purposes.
      examples:
      - application/json
      - text/html
    FeatherCoreUpdatedAt:
      type: string
      format: date-time
      description: Last update for the object
      examples:
      - '2023-04-04T09:20:15.000Z'
    OauthAuthAccessToken:
      type: string
      description: Access token aka JWT
      examples:
      - uiu9879khh.rtzrtz.6hdhfgh
    OauthAuthAuthorizePostRequest:
      type: object
      description: ''
      properties:
        client_id:
          $ref: '#/components/schemas/OauthAuthClientId'
        redirect_uri:
          $ref: '#/components/schemas/OauthAuthRedirectUri'
        scope:
          $ref: '#/components/schemas/OauthAuthScope'
        state:
          $ref: '#/components/schemas/OauthAuthState'
        response_type:
          $ref: '#/components/schemas/OauthAuthResponseType'
        user_id:
          $ref: '#/components/schemas/OauthAuthUserId'
    OauthAuthClientId:
      type: string
      description: The client id
      examples:
      - clientId
    OauthAuthClientSecret:
      type: string
      description: The client secret
      examples:
      - clientSecret
    OauthAuthCode:
      type: string
      description: authorization code returned before
      examples:
      - uiu9879khh
    OauthAuthExpiresIn:
      type: integer
      description: Expires in
      minimum: 3600
    OauthAuthGrantType:
      type: string
      description: grant type
      examples:
      - authorization_code/client_credentials
    OauthAuthLocationHeader:
      type: string
      description: Location header
      examples:
      - http://localhost:8080/redirect?code=asdasfg
    OauthAuthRedirect200Response:
      type: object
      description: ''
      properties:
        redirect_uri:
          $ref: '#/components/schemas/OauthAuthRedirectUri'
    OauthAuthRedirectUri:
      type: string
      description: The url to redirect to after successful request
      examples:
      - url.com
    OauthAuthResponseType:
      type: string
      description: Request-specific data
      examples:
      - code
    OauthAuthReturnRedirectUri:
      type: boolean
      default: false
      description: return redirect with 200 or 302
    OauthAuthScope:
      type: string
      description: 'Scope like: read write'
      examples:
      - read write
    OauthAuthState:
      type: string
      description: Request-specific data
      examples:
      - kjsngsfgn
    OauthAuthTokenPostRequest:
      type: object
      description: ''
      properties:
        grant_type:
          $ref: '#/components/schemas/OauthAuthGrantType'
        client_id:
          $ref: '#/components/schemas/OauthAuthClientId'
        client_secret:
          $ref: '#/components/schemas/OauthAuthClientSecret'
        code:
          $ref: '#/components/schemas/OauthAuthCode'
        redirect_uri:
          $ref: '#/components/schemas/OauthAuthRedirectUri'
        scope:
          $ref: '#/components/schemas/OauthAuthScope'
    OauthAuthTokenPostResponse:
      type: object
      description: ''
      properties:
        access_token:
          $ref: '#/components/schemas/OauthAuthAccessToken'
        token_type:
          $ref: '#/components/schemas/OauthAuthTokenType'
        expires_in:
          $ref: '#/components/schemas/OauthAuthExpiresIn'
        scope:
          $ref: '#/components/schemas/OauthAuthScope'
      required:
      - access_token
      - token_type
      - expires_in
      - scope
    OauthAuthTokenType:
      type: string
      description: Access token type
      examples:
      - Bearer
    OauthAuthUserId:
      type: string
      description: Bearar token for checking the accountId
      examples:
      - code
    OauthClientAudience:
      type: string
      description: Identifies the intended audience for the access token
      examples:
      - drive/lms/intranet
    OauthClientClientId:
      type: string
      description: The client id
      examples:
      - clientId
    OauthClientClientSecret:
      type: string
      description: The client secret
      examples:
      - clientSecret
    OauthClientClientType:
      type: string
      enum:
      - app
      - server
      description: The type of the client
      examples:
      - app
    OauthClientCreate:
      type: object
      description: ''
      properties:
        name:
          $ref: '#/components/schemas/OauthClientName'
        type:
          $ref: '#/components/schemas/OauthClientClientType'
        redirectUri:
          $ref: '#/components/schemas/OauthClientRedirectUri'
        loginRedirectUri:
          $ref: '#/components/schemas/OauthClientLoginRedirectUri'
        issuer:
          $ref: '#/components/schemas/OauthClientIssuer'
        audience:
          $ref: '#/components/schemas/OauthClientAudience'
        roleKeys:
          $ref: '#/components/schemas/OauthClientRoleKeys'
      required:
      - name
      - type
      - issuer
      - audience
    OauthClientDetail:
      type: object
      description: ''
      properties:
        clientId:
          $ref: '#/components/schemas/OauthClientClientId'
        name:
          $ref: '#/components/schemas/OauthClientName'
        type:
          $ref: '#/components/schemas/OauthClientClientType'
        clientSecret:
          $ref: '#/components/schemas/OauthClientClientSecret'
        redirectUri:
          $ref: '#/components/schemas/OauthClientRedirectUri'
        loginRedirectUri:
          $ref: '#/components/schemas/OauthClientLoginRedirectUri'
        issuer:
          $ref: '#/components/schemas/OauthClientIssuer'
        audience:
          $ref: '#/components/schemas/OauthClientAudience'
        privateKey:
          $ref: '#/components/schemas/OauthClientPrivateKey'
        publicKey:
          $ref: '#/components/schemas/OauthClientPublicKey'
        roles:
          $ref: '#/components/schemas/OauthClientRoles'
      required:
      - clientId
      - name
      - type
      - issuer
      - audience
      - privateKey
      - publicKey
    OauthClientIssuer:
      type: string
      description: The issuer is the authorization server
      examples:
      - http://accounts.com
    OauthClientList:
      type: object
      description: OauthClient list
      properties:
        items:
          $ref: '#/components/schemas/OauthClientListItems'
        sort:
          $ref: '#/components/schemas/OauthClientListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    OauthClientListItem:
      type: object
      description: OauthClient list item
      properties:
        clientId:
          $ref: '#/components/schemas/OauthClientClientId'
        name:
          $ref: '#/components/schemas/OauthClientName'
        type:
          $ref: '#/components/schemas/OauthClientClientType'
      required:
      - clientId
      - name
      - type
    OauthClientListItems:
      type: array
      description: OauthClient list items
      items:
        $ref: '#/components/schemas/OauthClientListItem'
      maxItems: 1000
      minItems: 0
    OauthClientListSort:
      type: string
      enum:
      - name
      - type
      description: The sort key for the list
    OauthClientLoginRedirectUri:
      type: string
      description: Redirect uri for the login screen
      examples:
      - http://localhost:8080/redirect
    OauthClientName:
      type: string
      description: A private name for the client for better identification
      examples:
      - My client
    OauthClientPatch:
      type: object
      description: ''
      properties:
        name:
          $ref: '#/components/schemas/OauthClientName'
        type:
          $ref: '#/components/schemas/OauthClientClientType'
        clientSecret:
          $ref: '#/components/schemas/OauthClientClientSecret'
        redirectUri:
          $ref: '#/components/schemas/OauthClientRedirectUri'
        loginRedirectUri:
          $ref: '#/components/schemas/OauthClientLoginRedirectUri'
        issuer:
          $ref: '#/components/schemas/OauthClientIssuer'
        audience:
          $ref: '#/components/schemas/OauthClientAudience'
        privateKey:
          $ref: '#/components/schemas/OauthClientPrivateKey'
        publicKey:
          $ref: '#/components/schemas/OauthClientPublicKey'
        roleKeys:
          $ref: '#/components/schemas/OauthClientRoleKeys'
    OauthClientPrivateKey:
      type: string
      description: A private key used to sign the jwt
      examples:
      - privateKey
    OauthClientPublicKey:
      type: string
      description: A public key used to verify the jwt
      examples:
      - publicKey
    OauthClientRedirectUri:
      type: string
      description: The client redirects to this url
      examples:
      - http://localhost:8080/redirect
    OauthClientRoleKeys:
      type: array
      description: Oauth server role keys
      items:
        $ref: '#/components/schemas/OauthRoleKey'
      maxItems: 1000
      minItems: 0
    OauthClientRoles:
      type: array
      description: Oauth server roles
      items:
        $ref: '#/components/schemas/OauthRoleReference'
      maxItems: 1000
      minItems: 0
    OauthClientUpdate:
      type: object
      description: ''
      properties:
        name:
          $ref: '#/components/schemas/OauthClientName'
        type:
          $ref: '#/components/schemas/OauthClientClientType'
        clientSecret:
          $ref: '#/components/schemas/OauthClientClientSecret'
        redirectUri:
          $ref: '#/components/schemas/OauthClientRedirectUri'
        loginRedirectUri:
          $ref: '#/components/schemas/OauthClientLoginRedirectUri'
        issuer:
          $ref: '#/components/schemas/OauthClientIssuer'
        audience:
          $ref: '#/components/schemas/OauthClientAudience'
        privateKey:
          $ref: '#/components/schemas/OauthClientPrivateKey'
        publicKey:
          $ref: '#/components/schemas/OauthClientPublicKey'
        roleKeys:
          $ref: '#/components/schemas/OauthClientRoleKeys'
      required:
      - name
      - type
      - issuer
      - audience
      - privateKey
      - publicKey
    OauthRoleKey:
      type: string
      description: Key of the role
      examples:
      - manager
    OauthRoleList:
      type: object
      description: Role list
      properties:
        items:
          $ref: '#/components/schemas/OauthRoleListItems'
        sort:
          $ref: '#/components/schemas/OauthRoleListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    OauthRoleListItem:
      type: object
      description: Role list item
      properties:
        key:
          $ref: '#/components/schemas/OauthRoleKey'
        name:
          $ref: '#/components/schemas/OauthRoleName'
      required:
      - key
      - name
    OauthRoleListItems:
      type: array
      description: Role list items
      items:
        $ref: '#/components/schemas/OauthRoleListItem'
      maxItems: 1000
      minItems: 0
    OauthRoleListSort:
      type: string
      enum:
      - key
      - name
      description: The sort key for the list
    OauthRoleName:
      type: string
      description: Name of the role
      examples:
      - Manager
    OauthRoleNotes:
      type: string
      description: Description of the role
      examples:
      - Manager role
    OauthRoleReference:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/OauthRoleKey'
        name:
          $ref: '#/components/schemas/OauthRoleName'
      required:
      - key
      - name
    SystemPermissionCreate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
        notes:
          $ref: '#/components/schemas/SystemPermissionNotes'
      required:
      - key
      - name
    SystemPermissionDetail:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
        notes:
          $ref: '#/components/schemas/SystemPermissionNotes'
      required:
      - key
      - name
    SystemPermissionKey:
      type: string
      description: Key of the permission
      examples:
      - namespace.context.action
    SystemPermissionList:
      type: object
      description: Permission list
      properties:
        items:
          $ref: '#/components/schemas/SystemPermissionListItems'
        sort:
          $ref: '#/components/schemas/SystemPermissionListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    SystemPermissionListItem:
      type: object
      description: Permission list item
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
      required:
      - key
      - name
    SystemPermissionListItems:
      type: array
      description: Permission list items
      items:
        $ref: '#/components/schemas/SystemPermissionListItem'
      maxItems: 1000
      minItems: 0
    SystemPermissionListSort:
      type: string
      enum:
      - key
      - name
      description: The sort key for the list
    SystemPermissionName:
      type: string
      description: Name of the permission
      examples:
      - Name of the permission
    SystemPermissionNotes:
      type: string
      description: Description of the permission
      examples:
      - Notes for the permission
    SystemPermissionPatch:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
        notes:
          $ref: '#/components/schemas/SystemPermissionNotes'
    SystemPermissionReference:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
      required:
      - key
      - name
    SystemPermissionUpdate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
        notes:
          $ref: '#/components/schemas/SystemPermissionNotes'
      required:
      - key
      - name
    UserAccountCreate:
      type: object
      description: ''
      properties:
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        password:
          $ref: '#/components/schemas/UserAccountPassword'
        firstName:
          $ref: '#/components/schemas/UserAccountFirstName'
        lastName:
          $ref: '#/components/schemas/UserAccountLastName'
        imageKey:
          $ref: '#/components/schemas/UserAccountImageKey'
        roleKeys:
          $ref: '#/components/schemas/UserAccountRoleKeys'
      required:
      - email
      - password
      - roleKeys
    UserAccountDetail:
      type: object
      description: ''
      properties:
        id:
          $ref: '#/components/schemas/UserAccountId'
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        firstName:
          $ref: '#/components/schemas/UserAccountFirstName'
        lastName:
          $ref: '#/components/schemas/UserAccountLastName'
        imageKey:
          $ref: '#/components/schemas/UserAccountImageKey'
        roles:
          $ref: '#/components/schemas/UserAccountRoles'
        permissions:
          $ref: '#/components/schemas/UserAccountPermissions'
      required:
      - id
      - email
      - roles
      - permissions
    UserAccountEmail:
      type: string
      format: email
      description: E-mail address of the user
      examples:
      - info@binarybirds.com
    UserAccountFirstName:
      type: string
      description: Profile first name
      examples:
      - John
    UserAccountId:
      type: string
      description: Unique user account identifier
      examples:
      - P6p5WCctPKqhYKtGMUoTQ
    UserAccountImageKey:
      type: string
      description: Profile image key of the role
      examples:
      - 345jnkjwevnjk4n56
    UserAccountLastLocationUpdate:
      type: string
      format: date-time
      description: Profile last location update
      examples:
      - '2023-02-10T09:20:15.393Z'
    UserAccountLastName:
      type: string
      description: Profile last name
      examples:
      - Doe
    UserAccountLat:
      type: number
      format: double
      description: Profile last location latitude
      minimum: 0e+0
    UserAccountList:
      type: object
      description: User account list
      properties:
        items:
          $ref: '#/components/schemas/UserAccountListItems'
        sort:
          $ref: '#/components/schemas/UserAccountListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    UserAccountListItem:
      type: object
      description: User account list item
      properties:
        id:
          $ref: '#/components/schemas/UserAccountId'
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        firstName:
          $ref: '#/components/schemas/UserAccountFirstName'
        lastName:
          $ref: '#/components/schemas/UserAccountLastName'
      required:
      - id
      - email
    UserAccountListItems:
      type: array
      description: User account list items
      items:
        $ref: '#/components/schemas/UserAccountListItem'
      maxItems: 1000
      minItems: 0
    UserAccountListSort:
      type: string
      enum:
      - email
      - firstName
      - lastName
      description: The sort key for the list
    UserAccountLon:
      type: number
      format: double
      description: Profile last location longitude
      minimum: 0e+0
    UserAccountPassword:
      type: string
      format: password
      description: Password of the user
      examples:
      - ChangeMe1
    UserAccountPatch:
      type: object
      description: ''
      properties:
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        firstName:
          $ref: '#/components/schemas/UserAccountFirstName'
        lastName:
          $ref: '#/components/schemas/UserAccountLastName'
        imageKey:
          $ref: '#/components/schemas/UserAccountImageKey'
        password:
          $ref: '#/components/schemas/UserAccountPassword'
        roleKeys:
          $ref: '#/components/schemas/UserAccountRoleKeys'
    UserAccountPermissions:
      type: array
      description: ''
      items:
        $ref: '#/components/schemas/SystemPermissionKey'
      maxItems: 1000
      minItems: 0
    UserAccountPhone:
      type: string
      description: Profile phone
      examples:
      - '+12425346356'
    UserAccountPosition:
      type: string
      description: Profile position
      examples:
      - Doe
    UserAccountPublicEmail:
      type: string
      format: email
      description: Public e-mail address of the profile
      examples:
      - info@binarybirds.com
    UserAccountReference:
      type: object
      description: ''
      properties:
        id:
          $ref: '#/components/schemas/UserAccountId'
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        firstName:
          $ref: '#/components/schemas/UserAccountFirstName'
        lastName:
          $ref: '#/components/schemas/UserAccountLastName'
      required:
      - id
      - email
    UserAccountRoleKeys:
      type: array
      description: User role keys
      items:
        $ref: '#/components/schemas/UserRoleKey'
      maxItems: 1000
      minItems: 0
    UserAccountRoles:
      type: array
      description: User roles
      items:
        $ref: '#/components/schemas/UserRoleReference'
      maxItems: 1000
      minItems: 0
    UserAccountUpdate:
      type: object
      description: ''
      properties:
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        firstName:
          $ref: '#/components/schemas/UserAccountFirstName'
        lastName:
          $ref: '#/components/schemas/UserAccountLastName'
        imageKey:
          $ref: '#/components/schemas/UserAccountImageKey'
        password:
          $ref: '#/components/schemas/UserAccountPassword'
        roleKeys:
          $ref: '#/components/schemas/UserAccountRoleKeys'
      required:
      - email
      - roleKeys
    UserAccountWeb:
      type: string
      description: Profile web page
      examples:
      - https://google.nl
    UserGatewayAccountsIdArray:
      type: array
      description: User ids
      items:
        $ref: '#/components/schemas/UserAccountId'
      maxItems: 1000
      minItems: 0
    UserGatewayAccountsReferenceArray:
      type: array
      description: User references
      items:
        $ref: '#/components/schemas/UserAccountReference'
      maxItems: 1000
      minItems: 0
    UserRoleCreate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
        notes:
          $ref: '#/components/schemas/UserRoleNotes'
        type:
          $ref: '#/components/schemas/UserRoleRoleType'
        permissionKeys:
          $ref: '#/components/schemas/UserRolePermissionKeys'
      required:
      - key
      - name
      - permissionKeys
    UserRoleDetail:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
        notes:
          $ref: '#/components/schemas/UserRoleNotes'
        type:
          $ref: '#/components/schemas/UserRoleRoleType'
        permissions:
          $ref: '#/components/schemas/UserRolePermissions'
      required:
      - key
      - name
      - type
      - permissions
    UserRoleKey:
      type: string
      description: Key of the role
      examples:
      - manager
    UserRoleList:
      type: object
      description: Role list
      properties:
        items:
          $ref: '#/components/schemas/UserRoleListItems'
        sort:
          $ref: '#/components/schemas/UserRoleListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    UserRoleListItem:
      type: object
      description: Role list item
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
      required:
      - key
      - name
    UserRoleListItems:
      type: array
      description: Role list items
      items:
        $ref: '#/components/schemas/UserRoleListItem'
      maxItems: 1000
      minItems: 0
    UserRoleListSort:
      type: string
      enum:
      - key
      - name
      description: The sort key for the list
    UserRoleName:
      type: string
      description: Name of the role
      examples:
      - Manager
    UserRoleNotes:
      type: string
      description: Description of the role
      examples:
      - Manager role
    UserRolePatch:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
        notes:
          $ref: '#/components/schemas/UserRoleNotes'
        type:
          $ref: '#/components/schemas/UserRoleRoleType'
        permissionKeys:
          $ref: '#/components/schemas/UserRolePermissionKeys'
    UserRolePermissionKeys:
      type: array
      description: System permission keys
      items:
        $ref: '#/components/schemas/SystemPermissionKey'
      maxItems: 1000
      minItems: 0
    UserRolePermissions:
      type: array
      description: System permissions
      items:
        $ref: '#/components/schemas/SystemPermissionReference'
      maxItems: 1000
      minItems: 0
    UserRoleReference:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
      required:
      - key
      - name
    UserRoleRoleType:
      type: string
      enum:
      - open
      - protected
      description: Role type
      examples:
      - open
    UserRoleUpdate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
        notes:
          $ref: '#/components/schemas/UserRoleNotes'
        type:
          $ref: '#/components/schemas/UserRoleRoleType'
        permissionKeys:
          $ref: '#/components/schemas/UserRolePermissionKeys'
      required:
      - key
      - name
      - permissionKeys
  responses:
    FeatherCoreBadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreBadRequestError'
    FeatherCoreConflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreConflictError'
    FeatherCoreForbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreForbiddenError'
    FeatherCoreFound:
      description: Found
    FeatherCoreGone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreGoneError'
    FeatherCoreHead:
      description: Ok
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
    FeatherCoreInternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreInternalServerErrorError'
    FeatherCoreMethodNotAllowed:
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreMethodNotAllowedError'
    FeatherCoreNoContent:
      description: No content
    FeatherCoreNotAcceptable:
      description: Not acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreNotAcceptableError'
    FeatherCoreNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreNotFoundError'
    FeatherCoreOk:
      description: ok
    FeatherCoreSeeOther:
      description: See Other
    FeatherCoreTemporaryRedirect:
      description: Temporary Redirect
    FeatherCoreUnauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnauthorizedError'
    FeatherCoreUnprocessableContent:
      description: Unprocessable content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnprocessableContentError'
    FeatherCoreUnsupportedMediaType:
      description: Unsupported media type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnsupportedMediaTypeError'
    OauthAuthRedirect200Response:
      description: Redirect response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthAuthRedirect200Response'
    OauthAuthRedirectResponse:
      description: Redirect response
      headers:
        Location:
          $ref: '#/components/headers/Location'
    OauthAuthTokenPostResponse:
      description: Code exchange response object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthAuthTokenPostResponse'
    OauthClientDetail:
      description: OauthClient detail object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthClientDetail'
    OauthClientList:
      description: OauthClient list object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthClientList'
    OauthRoleList:
      description: Oauth Role list object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthRoleList'
    UserAccountDetail:
      description: User Account detail object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountDetail'
    UserAccountList:
      description: User Account list object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountList'
    UserGatewayAccountsReferenceArray:
      description: User references
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGatewayAccountsReferenceArray'
  parameters:
    FeatherCoreListOrder:
      name: order
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListOrder'
      description: Sort order parameter
    FeatherCoreListPageIndex:
      name: pageIndex
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListPageIndex'
      description: The current page number
    FeatherCoreListPageSize:
      name: pageSize
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListPageSize'
      description: The number of items per page
    FeatherCoreListSearch:
      name: search
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListSearch'
      description: The list search value
    OauthAuthClientId:
      name: client_id
      in: query
      schema:
        $ref: '#/components/schemas/OauthAuthClientId'
      description: clientId
    OauthAuthRedirectUri:
      name: redirect_uri
      in: query
      schema:
        $ref: '#/components/schemas/OauthAuthRedirectUri'
      description: Url to redirect to
    OauthAuthResponseType:
      name: response_type
      in: query
      schema:
        $ref: '#/components/schemas/OauthAuthResponseType'
      description: responseType
    OauthAuthReturnRedirectUri:
      name: return_redirect_uri
      in: query
      schema:
        $ref: '#/components/schemas/OauthAuthReturnRedirectUri'
      description: true/false to return with 200/302
    OauthAuthScope:
      name: scope
      in: query
      schema:
        $ref: '#/components/schemas/OauthAuthScope'
      description: scope
    OauthAuthState:
      name: state
      in: query
      schema:
        $ref: '#/components/schemas/OauthAuthState'
      description: state
    OauthClientClientId:
      name: clientId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OauthClientClientId'
      description: OauthClient identifier
    OauthClientListSort:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/OauthClientListSort'
      description: Sort by parameter
    OauthRoleKey:
      name: roleKey
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OauthRoleKey'
      description: Oauth role key
    OauthRoleListSort:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/OauthRoleListSort'
      description: Sort by parameter
    UserAccountId:
      name: accountId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UserAccountId'
      description: User account identifier
    UserAccountListSort:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/UserAccountListSort'
      description: Sort by parameter
  requestBodies:
    OauthAuthAuthorizePostRequest:
      description: get authorization code request body
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/OauthAuthAuthorizePostRequest'
      required: true
    OauthAuthTokenPostRequest:
      description: exchange token request body
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/OauthAuthTokenPostRequest'
      required: true
    OauthClientCreate:
      description: Create request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthClientCreate'
      required: true
    OauthClientPatch:
      description: Patch request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthClientPatch'
      required: true
    OauthClientUpdate:
      description: Update request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OauthClientUpdate'
      required: true
    UserGatewayAccountsIdArray:
      description: User ids
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGatewayAccountsIdArray'
      required: true
  headers:
    Content-Length:
      schema:
        $ref: '#/components/schemas/FeatherCoreHeadersContentLength'
      description: Content length header
    Location:
      schema:
        $ref: '#/components/schemas/OauthAuthLocationHeader'
      description: Location Header
  securitySchemes:
    FeatherCoreBearerToken:
      description: Authorization header using a Bearer token
      type: http
      scheme: bearer
      bearerFormat: token
